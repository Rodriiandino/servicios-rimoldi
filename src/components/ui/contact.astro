---
import Facebook from '@components/icons/contact/facebook.astro'
import Instagram from '@components/icons/contact/instagram.astro'
import Whatsapp from '@components/icons/contact/whatsapp.astro'
import Phone from '@components/icons/contact/phone.astro'
import Mail from '@components/icons/contact/mail.astro'
import Location from '@components/icons/contact/location.astro'
import Anchor from './anchor.astro'
import ContactInfo from './contact-info.astro'

interface Props {
  className?: string
}

const { className } = Astro.props

// const siteKey = ''
---

<div
  class:list={[
    'w-full flex flex-col gap-7 md:flex-row md:gap-10 py-8',
    className
  ]}
>
  <div class='flex flex-col gap-7 md:w-1/2'>
    <div class='flex flex-col gap-5'>
      <h3 class='font-noto text-1 font-bold'>Información de contacto</h3>
      <ContactInfo title='Teléfono' description='+54 3415 610722 '>
        <Phone slot='icon' />
      </ContactInfo>
      <ContactInfo title='Email' description='rimoldi.elio78@gmail.com'>
        <Mail slot='icon' />
      </ContactInfo>
      <ContactInfo
        title='Locación'
        description='Calamuchita, Córdoba, Argentina'
      >
        <Location slot='icon' />
      </ContactInfo>
    </div>
    <div class='flex flex-col gap-5'>
      <h3 class='font-noto text-1 font-bold'>Síguenos en redes sociales</h3>
      <nav aria-label='Síguenos en redes sociales'>
        <ul class='flex gap-4 list-none p-0'>
          <li class='hover:scale-110 transform transition-transform'>
            <a
              href='https://www.facebook.com/elio.lakd'
              target='_blank'
              rel='noopener noreferrer'
              class='focus:outline-offset-4 focus:outline-2'
              aria-label='Síguenos en Facebook'
            >
              <Facebook />
              <span class='sr-only'>Facebook</span>
            </a>
          </li>
          <li class='hover:scale-110 transform transition-transform'>
            <a
              href='https://www.instagram.com/servicios_rimoldi/'
              target='_blank'
              rel='noopener noreferrer'
              class='focus:outline-offset-4 focus:outline-2'
              aria-label='Síguenos en Instagram'
            >
              <Instagram />
              <span class='sr-only'>Instagram</span>
            </a>
          </li>
        </ul>
      </nav>
    </div>
    <div>
      <Anchor
        href='https://wa.me/3415610722'
        ariaLabel='Contactar por Whatsapp'
        external
      >
        <Whatsapp /> Contáctanos por WhatsApp
        <span class='sr-only'>Whatsapp</span>
      </Anchor>
    </div>
  </div>
  <form class='w-full md:w-1/2 flex flex-col gap-4' id='contact-form'>
    <label for='name' class='text-third-color font-noto text-xs'>Nombre</label>
    <input
      type='text'
      placeholder='Tu Nombre'
      id='name'
      name='name'
      required
      class='font-noto text-xs text-main-color border border-main-color rounded-10px p-2'
    />
    <label for='email' class='text-third-color font-noto text-sm'>Email</label>
    <input
      type='email'
      placeholder='Tu Email'
      id='email'
      name='email'
      required
      class='font-noto text-xs text-main-color border-main-color rounded-10px p-2'
    />
    <label for='message' class='text-third-color font-noto text-sm'
      >Mensaje</label
    >
    <textarea
      id='message'
      placeholder='Tu Mensaje'
      name='message'
      required
      class='h-full font-noto text-xs text-main-color border-main-color rounded-10px p-2 resize-none min-h-40'
    ></textarea>

    <button
      type='submit'
      class='bg-second-color rounded-10px text-xs text-main-color font-noto p-2 font-semibold py-2 px-4 hover:brightness-[0.8] active:brightness-[0.6] transition-all focus:outline-offset-4 focus:outline-2 focus:brightness-110'
    >
      Envíanos tu Mensaje
    </button>
    <!-- <div
      class='cf-turnstile'
      data-sitekey={siteKey}
      data-langues='es'
      data-theme='light'
      data-size='flexible'
    > -->
    <p id='response' class='form__response'>
      Los Datos han sido enviados correctamente.
    </p>
  </form>
</div>

<!-- <script>
  import { actions, isInputError } from 'astro:actions'

  function initTurnstile() {
    try {
      const turnstileContainer = document.querySelector('.cf-turnstile')
      if (!turnstileContainer) return

      turnstileContainer.innerHTML = ''

      const turnstileInstance = (window as any).turnstile
      if (typeof turnstileInstance !== 'undefined') {
        turnstileInstance.render(turnstileContainer, {
          sitekey: '',
          theme: 'light',
          language: 'es',
          size: 'flexible'
        })
      }
    } catch (error) {
      console.error('Error inicializando Turnstile:', error)
    }
  }

  document.addEventListener('astro:page-load', () => {
    setTimeout(() => {
      initTurnstile()
    }, 0)
  })

  document.addEventListener('astro:page-load', () => {
    const form = document.getElementById('contact-form') as HTMLFormElement
    if (!form) return

    const fields = {
      name: document.getElementById('name') as HTMLInputElement,
      email: document.getElementById('email') as HTMLInputElement,
      message: document.getElementById('message') as HTMLTextAreaElement
    }

    const allFieldsExist = Object.values(fields).every(field => field !== null)
    if (!allFieldsExist) return

    const response = document.getElementById('response') as HTMLParagraphElement
    if (!response) return

    const createErrorElement = (id: string) => {
      const errorElement = document.createElement('p')
      errorElement.id = `${id}-error`
      errorElement.className = 'error__message'
      return errorElement
    }

    const errorElements = Object.keys(fields).reduce(
      (acc, key) => {
        const field = fields[key as keyof typeof fields]
        const errorElement = createErrorElement(key)
        field.parentNode?.appendChild(errorElement)
        acc[key] = errorElement
        return acc
      },
      {} as Record<string, HTMLParagraphElement>
    )

    const resetErrors = () => {
      Object.values(errorElements).forEach(errorElement => {
        errorElement.classList.remove('form__visible')
      })
      response.classList.remove('form__visible')
    }

    const displayErrors = (errors: Record<string, string[]>) => {
      Object.entries(errors).forEach(([field, messages]) => {
        const errorElement = errorElements[field]
        if (errorElement) {
          errorElement.textContent = messages.join(', ')
          errorElement.classList.add('form__visible')
        }
      })
    }

    form.addEventListener('submit', async event => {
      event.preventDefault()
      resetErrors()
      try {
        const formData = new FormData(form)
        let turnstileToken = formData.get('cf-turnstile-response') as string
        formData.delete('cf-turnstile-response')
        formData.append('token', turnstileToken)

        const { data, error } = await actions.send(formData)

        if (data) {
          response.classList.add('form__visible')
          form.reset()
          initTurnstile()
        }

        if (isInputError(error)) {
          displayErrors(error.fields)
        }
      } catch (error) {
        console.error('Error enviando el formulario:', error)
      }
    })
  })
</script> -->

<style>
  .error__message,
  .form__response {
    display: none;
  }

  .error__message {
    color: red;
    font-size: var(--step--2);
  }

  .form__visible {
    display: block;
    animation: show-message 0.3s ease;
  }

  .form__response {
    color: var(--third-color);
    text-align: center;
  }

  @keyframes show-message {
    0% {
      visibility: hidden;
      opacity: 0;
      transform: translateY(-20px);
    }
    100% {
      visibility: visible;
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>
