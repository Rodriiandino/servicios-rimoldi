---
import Logo from '@components/icons/logo.astro'
import Anchor from './anchor.astro'
const { pathname } = Astro.url

const nav = [
  {
    href: '/',
    text: 'Inicio',
    current: pathname === '/',
    ariaLabel: 'Ir a la página de inicio'
  },
  {
    href: '/servicios',
    text: 'Servicios',
    current: pathname === '/servicios',
    ariaLabel: 'Ir a la página de servicios'
  },
  {
    href: '/maquinarias',
    text: 'Maquinarias',
    current: pathname === '/maquinarias',
    ariaLabel: 'Ir a la página de maquinarias'
  },
  {
    href: '/proyectos',
    text: 'Proyectos',
    current: pathname === '/proyectos',
    ariaLabel: 'Ir a la página de proyectos'
  },
  {
    href: '/sobre-nosotros',
    text: 'Nosotros',
    current: pathname === '/sobre-nosotros',
    ariaLabel: 'Ir a la página de sobre nosotros'
  }
]

const contact = {
  href: '/contacto',
  text: 'Contacto',
  current: pathname === '/contacto',
  ariaLabel: 'Ir a la página de contacto'
}
---

<header
  class='sticky top-0 right-0 w-full h-[75px] bg-background-color flex items-center justify-center z-10 transition-transform duration-300'
  id='header'
>
  <nav
    class='w-full max-w-max-width h-full flex items-center justify-between px-side-sm sm:px-side bg-background-color z-20'
    aria-label='Navegación principal'
  >
    <a href='/' aria-label='Servicios Rimoldi - Ir al inicio' class='z-20'>
      <Logo />
    </a>
    <div class='flex items-center gap-2'>
      <ul class='flex items-center min-[840px]:gap-x-5'>
        {
          nav.map(({ href, text, current, ariaLabel }) => (
            <li>
              <a
                href={href}
                class:list={[
                  current && 'text-second-color',
                  'text-xs',
                  text === 'Contacto' && 'nav__contact',
                  'hover:text-second-color transition-colors focus:outline-offset-4 focus:outline-2 hidden min-[840px]:block'
                ]}
                aria-label={ariaLabel}
                aria-current={current ? 'page' : undefined}
              >
                {text}
              </a>
            </li>
          ))
        }
        <li class='z-20'>
          <Anchor
            href={contact.href}
            alternative={contact.current}
            ariaLabel='Ir a la página de contacto'
          >
            {contact.text}
          </Anchor>
        </li>
      </ul>
      <input type='checkbox' id='menu' class='hidden nav__check' />
      <label
        for='menu'
        aria-label='Abrir menú de navegación'
        aria-labelledby='menu'
        class='min-[840px]:hidden inline-flex cursor-pointer z-30 items-center p-2 ml-1 text-xs text-third-color rounded-lg hover:bg-fourth-color/25 focus:outline-none focus:ring-2 focus:ring-second-color focus:ring-opacity-50'
      >
        <span class='sr-only'> Abrir menú de navegación </span>
        <svg
          class='w-6 h-6'
          fill='currentColor'
          viewBox='0 0 20 20'
          xmlns='http://www.w3.org/2000/svg'
          ><path
            fill-rule='evenodd'
            d='M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z'
            clip-rule='evenodd'></path></svg
        >
        <svg
          class='hidden w-6 h-6'
          fill='currentColor'
          viewBox='0 0 20 20'
          xmlns='http://www.w3.org/2000/svg'
          ><path
            fill-rule='evenodd'
            d='M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z'
            clip-rule='evenodd'></path></svg
        >
      </label>
    </div>
  </nav>
  <nav
    class='absolute top-[75px] left-0 w-full bg-background-color flex flex-col items-center gap-2 p-4 min-[840px]:hidden z-10 nav__mobile'
  >
    <ul class='w-full'>
      {
        nav.map(({ href, text, current, ariaLabel }) => (
          <li class='w-full flex items-center'>
            <a
              href={href}
              class:list={[
                current &&
                  'bg-second-color border-none hover:text-third-color rounded-10px',
                'text-xs',
                text === 'Contacto' && 'nav__contact',
                'w-full hover:text-second-color transition-colors focus:outline-offset-4 focus:outline-2 border-b border-fourth-color/10 p-2'
              ]}
              aria-label={ariaLabel}
              aria-current={current ? 'page' : undefined}
            >
              {text}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
  <div class='nav__background'></div>
</header>

<script>
  document.addEventListener('astro:page-load', () => {
    const header = document.querySelector('#header') as HTMLElement
    const navMobile = document.querySelector('.nav__mobile') as HTMLElement
    const background = document.querySelector('.nav__background') as HTMLElement
    const navCheck = document.querySelector('.nav__check') as HTMLInputElement

    let lastScrollY = window.scrollY

    window.addEventListener(
      'scroll',
      () => {
        const currentScrollY = window.scrollY
        const scrollDifference = currentScrollY - lastScrollY

        if (scrollDifference > 0 && currentScrollY > 0 && !navCheck.checked) {
          header.classList.add('header-hide')
        } else {
          header.classList.remove('header-hide')
        }

        if (currentScrollY >= 0) {
          lastScrollY = currentScrollY
        }
      },
      { passive: true }
    )

    navCheck.addEventListener('click', () => {
      if (navCheck.checked) {
        navMobile.classList.add('display__menu')
        background.classList.add('display__background')
      } else {
        navMobile.classList.remove('display__menu')
        background.classList.remove('display__background')
      }
    })

    document.addEventListener('click', e => {
      if (e.target !== navMobile && e.target !== background) return

      navCheck.checked = false
      navMobile.classList.remove('display__menu')
      background.classList.remove('display__background')
    })
  })

  document.addEventListener('astro:after-preparation', () => {
    const navMobile = document.querySelector('.nav__mobile') as HTMLElement
    const background = document.querySelector('.nav__background') as HTMLElement

    navMobile.style.display = 'none'
    background.style.display = 'none'
  })
</script>

<style>
  .header-hide {
    transform: translateY(-75px);
  }

  .nav__mobile {
    opacity: 0;
    visibility: hidden;
    transition:
      opacity 0.3s ease-in-out,
      visibility 0.3s ease-in-out,
      transform 0.3s ease-in-out;
    transform: translateY(-100%);
  }

  .nav__mobile.display__menu {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .nav__background.display__background {
    display: block;
  }

  .nav__background {
    display: none;
  }

  @media screen and (max-width: 840px) {
    .nav__background {
      width: 100%;
      height: 100%;
      position: fixed;
      top: 0;
      left: 0;
      background-color: #1b1b1b9d;
      backdrop-filter: blur(5px);
      z-index: 9;
      cursor: pointer;
    }
  }
</style>
